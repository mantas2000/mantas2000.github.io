[ { "title": "2D Platformer Game - Dragon Adventures", "url": "/posts/dragon-adventures/", "categories": "Blogging, Demonstration", "tags": "unity, c#, hlsl, shaderlab", "date": "2021-12-13 13:24:29 +0000", "snippet": "OverviewDuring this project, I explored video game technologies and simulation techniques by developing a 2D platformer gameusing Unity engine. The project was mainly focused in getting familiar with the game engine and its core logic. While doingthis project I interacted with various aspects of gaming simulations, such as physics, artificial intelligence,design patterns, navigation through an environment, effects &amp;amp; audio, and evolving the gameplay simulation.Main game characterWorkflows used: Git and Agile.Technologies used: Unity, C#, HLSL, ShaderLab.Note: This project was done as part of assessment for module CSC3232.Things Implemented Newtonian Physics Collision Detection Collision Response and Feedback State-based behaviours Pathfinding Advanced real-time AI techniques (GOAP &amp;amp; flocking) Advanced gameplay progression techniques (Markov Decision Process, Min/Max tree search algorithm) Special effects and audioPlay the GamePlay Dragon Adventures on itch.ioLearning Outcomes Understood the implementation of Newtonian dynamics in a real-time simulation. Deduced and applied the appropriate simulation technique given a particular simulation requirement. Developed familiarity with the nature of embedded map data, and its role in influencing path planning. Gained knowledge about the fundamental algorithms behind effective path finding in games. Demonstrated an understanding of the interplay between game logic and physics computation. Developed familiarity with code concepts common to game engineering, and their effective implementation. Realised the importance of managing game complexity and maintaining correctness of game logic.Learn MoreFor more knowledge about the project, visit my project’s repository." }, { "title": "Graphical simulation of an alien planet using Unity3D engine", "url": "/posts/graphics-for-games/", "categories": "Blogging, Demonstration", "tags": "unity, c#, hlsl, shaderlab", "date": "2021-12-08 15:46:22 +0000", "snippet": "OverviewDuring this project, I built my skills in graphics programming by creating a graphical simulation of an alien planet surface.The goal of the project was to integrate as many graphical effects as I can into the scene,while keeping the frame-rate sufficiently high to maintain an interactive experience.The specification was therefore deliberately open-ended.Cinematic scene imagesWorkflows used: Git and Agile.Technologies used: Unity, C#, HLSL, ShaderLab.Note: This project was done as part of assessment for module CSC3231.Things Done A scene hierarchy where some elements move/rotate in relation to parent objects. Permanent change to the planet surface (meteor crashing into terrain). A navigable camera, moving around the 3D environment. Space-ship, clouds &amp;amp; northern lights graphical effects in the sky. A day/night cycle with appropriate lighting changes. A body of realistic looking water. Planet surface extends as far as the eye can see. Wind effect.YouTube Video of Project RunningLearning Outcomes Identified appropriate techniques for rendering graphics in real-time. Described graphical representations mathematically. Realised which advanced techniques are required to achieve realism. Used advanced techniques associated with lighting to create realism in graphical scenarios. Balanced processing and memory requirements of multiple graphical effects at cinematic frame rate.Learn MoreFor more knowledge about the project, visit my project’s repository." }, { "title": "Image Classification using a Convolutional Neural Network", "url": "/posts/image-classification-using-cnn/", "categories": "Blogging, Demonstration", "tags": "tensorflow, jupyter, cnn, cifar-10", "date": "2021-05-15 14:29:20 +0000", "snippet": "OverviewThis project aims to design and train a convolutional neural network (CNN) on the CIFAR-10dataset. Model over-fitting and poor performance are the main issues in designing a CNN.To solve these problems, I conducted a list of well-thought strategies.CIFAR-10 DatasetWorkflows used: Git and Agile.Technologies used: Python, Jupyter, TensorFlow.Note: This project was done as part of assessment for module CSC2034.TaskDesign and train a Convolutional Neural Network that performs as well as possible on the CIFAR-10 dataset.ResultsAfter implementing pre-defined CNN architecture, optimisation algorithm, image data augmentation techniques and tuning general model parameters, overall model train accuracy jumped to 94%, and test accuracy reached 89%. Both train and test losses were below 0.4.Accuracy and loss of the final modelConfusion matrix of the final modelSummary of CNN DevelopmentIn this study, I performed systematic experiments to design and train a convolutional neural network.Throughout the development of the model, I improved CNN performance and reduced overfitting withfour different strategies: by selecting pre-defined CNN architecture, optimisation algorithm,implementing image data augmentation and tuning general training hyper-parameters such as batchsize and the number of epochs.Summary of CNN developmentLearning Outcomes Selected and applied techniques appropriate to a particular task or goal. Demonstrated use of relevant software tools. Critically evaluated and assessed research papers. Gained knowledge of the basic concepts of deep learning.Learn MoreFor more knowledge about the project, visit my project’s repository." }, { "title": "Developing Asset Maintenance Application", "url": "/posts/asset-maintenance-application/", "categories": "Blogging, Demonstration", "tags": "xamarin, c#, android, ios, mysql", "date": "2021-01-31 16:41:58 +0000", "snippet": "OverviewDuring this project, I worked in a team to develop an application for a company called ENGIE,which looked on ways to simplify their assets maintaining process. Furthermore, the companywanted to reduce its Carbon Footprint by going entirely paperless. The client required us to develop an applicationthat supports both Android &amp;amp; iOS devices.App’s home pageWorkflows used: Git and Waterfall.Technologies used: Xamarin, C#, XAML, AWS, MySQL.Note: This project was done as part of assessment for module CSC2033.Customer RequirementsBuild an App that ENGIE’s subcontractors can use that will: Link with QR code or barcode to identify the specific asset that is subject to a service (QR/barcode will be linked to asset register). Depending on the asset, serve up the corresponding compliance form. In all cases serve up a asset condition survey form. Compliance with Data Protection Act 2018. Comply with ENGIE branding guidelines.Product DevelopmentWe decided to use the Xamarin mobile app platform to create a cross-platform mobile app that shares a native userinterface and most code between different mobile operating systems. All coding was written using C# programming language.The Graphical User Interface (GUI) of the application was made using XAML user interface mark-up language.My Roles and Responsibilities Database connection Creation of Login &amp;amp; Registration pages Biometric authentication implementation (Fingerprint &amp;amp; Face ID) Security/Encryption PDF support implementation GUI Creation &amp;amp; Design (XAML) Dark Mode support TestingLearning Outcomes Designed and implemented a large software system. Gained practical experience in real-world software development and team working. Demonstrated practical experience in issues such as team structure, document preparation, project management. Fulfilled appropriate roles within a team and applied particular skills to the job in hand. Gained an experience of working with appropriate industrial-strength tool-chains. Developed employability skills.Learn MoreFor more knowledge about the project, visit my project’s repository." }, { "title": "Thumbnail Maker", "url": "/posts/thumbnail-maker/", "categories": "Blogging, Demonstration", "tags": "python", "date": "2019-11-17 14:34:33 +0000", "snippet": "OverviewIn this project, I explored image manipulation using the Pillow Python library. Furthermore, I developed a program that modifies a selection of images of various sizes and file formats and converts them to JPEG thumbnails.GUI of the applicationWorkflows used: Git and Agile.Technologies used: Python.Note: This project was done as part of assessment for module CSC1034.Objectives Read in image files and store them in an appropriate collection ready for modification. Convert the images to thumbnails and name the new files appropriately. Apply various filters to the images using the ImageFilter module. Modify the RGB values of images to produce a new filter. Experiment with the Pillow library and its modules and save what you have produced.Learning Outcomes Investigated a library’s documentation page to produce code that satisfies an objective. Handled the reading and writing of files. Explored the various applications of a library’s modules to produce different results. Expanded my knowledge of traversing collections to explore the different properties of an image. Used my understanding of a library and produced something creative.Libraries Investigated Pillow Tkinter ThreadingLearn MoreFor more knowledge about the project, visit my project’s repository." } ]
